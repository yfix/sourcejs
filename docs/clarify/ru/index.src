<!-- Custom -->
<style>
    .emph {
        color: #67A9D4;
        }

</style>

<h1>Clarify - вёрстка без примесей</h1>

<!--<a class="source_spec" href="#777">Ссылка на сферическую документацию</a>-->
<!--<div class="source_warn">Опасно! Текст для привлечения внимания.</div>-->

<section class="source_section">
    <h2>Что?</h2>

    <p>
        Плагин для движка документации "Source", который отображает выбранные блоки спецификации
        на отдельной странице в запрошенном (заранее заготовленном) контексте (шаблоне), который
        можно настроить или сделать самостоятельно, используя Jade.</p>

    <h3>..сделать что бы заработало</h3>
    <p>Плагин работает сразу из коробки. Однако если необходимо рендерить спеки,
       которые используют клиентский шаблонизатор, то Jsdom в этом пока не помощник
       и по прежнему стоит использовать PhantomJS, который по умолчанию  идет под Linux,
       для MacOS / Windows, необходимо <a href="http://phantomjs.org/download.html">скачать</a>
       платформенную сборку или <a href="http://phantomjs.org/build.html">собрать</a> самостоятельно
       по инструкции. После этого просто замените файл phantomjs в корне плагина на собственный.</p>

    <h3>..мы используем под капотом</h3>
    <ul>
        <li><a href="http://nodejs.org">Nodejs</a> - основная серверная часть;
        <li><a href="http://jade-lang.com/">Jade</a> - шаблонизатор;
        <li><a href="http://phantomjs.org/">PhantomJS</a> - парсер страницы (отдельный исполняемый файл);
        <li><a href="https://npmjs.org/package/jsdom">Jsdom</a> - парсер страницы (NodeJS модуль);
    </ul>
</section>

<section class="source_section">
    <h2>Как?</h2>

    <h3>..заставить это работать</h3>

    <p>Что бы получить вырезанный блок кода на странице со спекой делается запрос, вида: <br>
        <b>http://<span class="emph">source.org</span>/.../<span class="emph">index.html</span>?get=<span class="emph">mob</span>&id=<span
                class="emph">1,2,5</span></b> <br>
       , в котором: <br>
    </p>
    <ul>
        <li><span class="emph">source.org</span> - localhost или hostname сервера с Source;
        <li><span class="emph">index.html</span> - говорит серверу, что запаршивается документ спецификации, а не навигация;
        <li><span class="emph">mob</span> - переменная контекста отображения или предустановленный шаблон для форматирования
                                          спеки на новой странице;
        <li><span class="emph">1,2,5</span> - номера блоков source_example (считаюся по порядку, начиная с 1), для вырезки в
                                            отдельном контексте, один или несколько - в данном случае первая, вторая и пятая.
    </ul>

    <h3>..важать из дополнения максимум</h3>

    <p>Последнее дополнение включает в себя модуль jsdom, который позвляет значительно ускорить парсинг вёрстки
       в том случае, когда не используются клиентский шаблонизатор.</p>

    <p>Введено дополнительное значение контекста (фактически новый шаблон)</p>

    <ul>
        <li>?get=<span class="emph">clr</span></li> {String}    новый шаблон форматирования, полностью чистая страница;
    </ul>

    <p>Надстрйоки:</p>
    <ul>
        <li>?ph=<span class="emph">true</span></li> {Boolean}   использовать PhantomJS (по умалчанию false)
        <li>?wrap=<span class="emph">true</span></li> {Boolean}    использовать обертку .source_example (по умалчанию true)
    </ul>

    <h3>..решить возможные проблемы</h3>

    <p>
        <b>Проблема:</b> скрипт запускается только от index.html, со слеша он не поймет вас. <br>
        <b>Решение:</b> Очевидно: делая запрос, убедиться, что в URL указан index.html;
    </p>
    <p>
        <b>П:</b> результатом работы стала пустая валидная HTML-страница. <br>
        <b>Р:</b> возможно на обрабатываемой старнице используется клиентский шаблонизатор который не успевает отрендерить страницу до того как это сделает Clarify. Можно вручную увеличить таймаут в clarify/phantom/ph.js.
    </p>
</section>

<section class="source_section">
    <h2>Зачем?</h2>

    <h3>..можно хотеть это использовать</h3>
    <p> а) тестирование на мобильных устройствах; <br>
        б) тестирование под старые браузеры;
    </p>


    <h3>..еще может быть полезно</h3>
    <p>а) тестить полноэкранные спеки;<br>
       б) тестировать ненавязчивый javascript (а вернее его отсуствие :);<br>
       в) задавать разные контексты отображения на одну и ту же верстку (другой дизайны, доктайп,
       платформы);<br>
       г) тестирование и просмотр responsive design;
    </p>

</section>